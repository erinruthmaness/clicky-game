{"version":3,"sources":["images/$abba1$.jpg","images/$abba2$.jpg","images/$abba3$.jpg","images/$abba4$.jpg","images/$abba5$.jpg","images/$abba6$.jpg","images/$abba7$.jpg","images/$abba8$.jpg","images/$abba9$.jpg","images/$abba10$.jpg","images/$abba11$.jpg","images/$abba12$.jpg","images/$abba13$.jpg","images/$abba14$.jpg","images/$abba15$.jpg","images/$abba16$.jpg","components/PhotoCard.js","components/HeaderBar.js","components/PhotoGallery.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","PhotoCard","props","src","source","alt","className","key","id","onClick","handleClick","HeaderBar","score","topScore","photoGallery","url","img1","img2","img3","img4","img5","img6","img7","img8","img9","img10","img11","img12","img13","img14","img15","img16","App","state","photoArray","clickedArray","event","clickedPic","target","shuffleArray","alreadyClicked","indexOf","push","setState","youLose","i","length","j","Math","floor","random","this","map","picture","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.81650d66.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/$abba1$.eb20c9c6.jpg\";","module.exports = __webpack_public_path__ + \"static/media/$abba2$.193003fb.jpg\";","module.exports = __webpack_public_path__ + \"static/media/$abba3$.957a1202.jpg\";","module.exports = __webpack_public_path__ + \"static/media/$abba4$.2f3d6ce9.jpg\";","module.exports = __webpack_public_path__ + \"static/media/$abba5$.77f19d5e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/$abba6$.d434efcf.jpg\";","module.exports = __webpack_public_path__ + \"static/media/$abba7$.7a76119b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/$abba8$.d90f921b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/$abba9$.0ab0268e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/$abba10$.3fb75500.jpg\";","module.exports = __webpack_public_path__ + \"static/media/$abba11$.3e98e9ae.jpg\";","module.exports = __webpack_public_path__ + \"static/media/$abba12$.f1c9f961.jpg\";","module.exports = __webpack_public_path__ + \"static/media/$abba13$.2286d3a6.jpg\";","module.exports = __webpack_public_path__ + \"static/media/$abba14$.4b537348.jpg\";","module.exports = __webpack_public_path__ + \"static/media/$abba15$.be29f0d1.jpg\";","module.exports = __webpack_public_path__ + \"static/media/$abba16$.878d1fe2.jpg\";","import React from \"react\";\r\n\r\nfunction PhotoCard(props) {\r\n    return (\r\n        <img src={props.source}\r\n            alt=\"game-piece\"\r\n            className=\"game-piece\"\r\n            key={props.id}\r\n            id={props.id}\r\n            onClick={props.handleClick} />\r\n    );\r\n};\r\n\r\nexport default PhotoCard;","import React from \"react\";\r\n\r\nfunction HeaderBar(props) {\r\n    return (\r\n        <div id=\"header-bar\">\r\n            <div id=\"title\">The ABBA Shuffle</div>\r\n            <div id=\"instructions\">Click an image to begin!</div>\r\n            <div id=\"scoreboard\"><span id=\"score\">Score: {props.score}</span><span id=\"score-stack\"> | </span>\r\n             <span id=\"top-score\">Top Score: {props.topScore}</span></div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default HeaderBar;","import img1 from \"../images/$abba1$.jpg\";\r\nimport img2 from \"../images/$abba2$.jpg\";\r\nimport img3 from \"../images/$abba3$.jpg\";\r\nimport img4 from \"../images/$abba4$.jpg\";\r\nimport img5 from \"../images/$abba5$.jpg\";\r\nimport img6 from \"../images/$abba6$.jpg\";\r\nimport img7 from \"../images/$abba7$.jpg\";\r\nimport img8 from \"../images/$abba8$.jpg\";\r\nimport img9 from \"../images/$abba9$.jpg\";\r\nimport img10 from \"../images/$abba10$.jpg\";\r\nimport img11 from \"../images/$abba11$.jpg\";\r\nimport img12 from \"../images/$abba12$.jpg\";\r\nimport img13 from \"../images/$abba13$.jpg\";\r\nimport img14 from \"../images/$abba14$.jpg\";\r\nimport img15 from \"../images/$abba15$.jpg\";\r\nimport img16 from \"../images/$abba16$.jpg\";\r\n\r\nconst photoGallery = [\r\n    {\r\n        id: 1,\r\n        url: img1,\r\n    },\r\n    {\r\n        id: 2,\r\n        url: img2,\r\n    },\r\n    {\r\n        id: 3,\r\n        url: img3\r\n    },\r\n    {\r\n        id: 4,\r\n        url: img4\r\n    },\r\n    {\r\n        id: 5,\r\n        url: img5\r\n    },\r\n    {\r\n        id: 6,\r\n        url: img6\r\n    },\r\n    {\r\n        id: 7,\r\n        url: img7\r\n    },\r\n    {\r\n        id: 8,\r\n        url: img8\r\n    },\r\n    {\r\n        id: 9,\r\n        url: img9\r\n    },\r\n    {\r\n        id: 10,\r\n        url: img10\r\n    },\r\n    {\r\n        id: 11,\r\n        url: img11\r\n    },\r\n    {\r\n        id: 12,\r\n        url: img12\r\n    },\r\n    {\r\n        id: 13,\r\n        url: img13\r\n    },\r\n    {\r\n        id: 14,\r\n        url: img14\r\n    },\r\n    {\r\n        id: 15,\r\n        url: img15\r\n    },\r\n    {\r\n        id: 16,\r\n        url: img16\r\n    }\r\n]\r\n\r\n\r\nexport default photoGallery;\r\n","import React from 'react';\nimport PhotoCard from \"./components/PhotoCard\";\nimport HeaderBar from \"./components/HeaderBar\";\nimport photoGallery from \"./components/PhotoGallery\";\nimport './App.css';\n\n\nclass App extends React.Component {\n  state = {\n    photoArray: photoGallery,\n    clickedArray: [],\n    score: 0,\n    topScore: 0\n  };\n\n  handleClick = (event) => {\n    const clickedPic = event.target.id;\n    this.shuffleArray();\n    let alreadyClicked = this.state.clickedArray;\n    if (alreadyClicked.indexOf(clickedPic) === -1) {\n      alreadyClicked.push(clickedPic)\n      this.setState({ clickedArray: alreadyClicked });\n      this.setState({ score : (this.state.score + 1)})\n    }\n    else {\n      this.youLose();\n    }\n  };\n\n  shuffleArray = function () {\n    for (let i = photoGallery.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [photoGallery[i], photoGallery[j]] = [photoGallery[j], photoGallery[i]];\n    }\n    this.setState({ photoArray: photoGallery });\n  };\n\n  youLose = () => {\n    if (this.state.score > this.state.topScore) {\n      this.setState({ topScore: this.state.score });\n    }\n    this.setState({ score: 0 });\n  };\n\n  render() {\n    return (\n      <div>\n        <HeaderBar\n          score={this.state.score}\n          topScore={this.state.topScore}\n        />\n        <div id=\"game-board\">\n          {this.state.photoArray.map(picture =>\n            <PhotoCard\n              source={picture.url}\n              id={picture.id}\n              handleClick={this.handleClick}\n            />\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}